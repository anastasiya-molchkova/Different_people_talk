/* Программно смоделировать разговор людей. Всего есть 5 людей. Каждый человек имеет имя (строку) и возраст (число). 
Возраст каждого человека генерируется рандомно из диапазона от 20 до 40, а имена из следующего списка: 
Александр, Андрей, Анастасия, Ирина, Наталья, Павел, Роман, Светлана, Сергей, Татьяна.
Любой человек способен выполнять два действия:
   здороваться с другим человеком;
   рассказывать о себе.
Люди делятся на 3 типа (разные классы):
   Тип №1: Формалисты. Здороваются со всеми следующим образом: 
					Здравствуй, <имя>!, где <имя> — это имя человека, с которым он здоровается.
   Тип №2: Неформалы. Со всеми здороваются: Привет, <имя>!.
   Тип №3: Реалисты. Если возраст собеседника меньше/равен или больше, не более чем на 5 лет, то здороваются следующим образом:
					Привет, <имя>!, иначе Здравствуй, <имя>!.
В программной реализации приветствие должно быть реализовано как полиморфный метод, 
принимающий человека в качестве параметра и возвращающий строку.
Рассказ о человеке является строкой формата Меня зовут Вася, мой возраст 21 лет и я неформал 
(вместо Вася используется имя любого другого человека, вместо 21 возраст этого человека, вместо неформал может быть 
формалист, либо реалист). 
Как видите у людей с грамматикой не всё в порядке, и они говорят лет после любого числа — непорядок, 
это нужно обязательно исправить.
Программа должна показать информацию обо всех людях. Затем все люди должны поздороваться друг с другом в следующем порядке: 
первый здоровается со вторым, затем второй с первым, а затем первый с третьим, третий с первым, и т.д. Например:
Петя: Привет, Вася!
Вася: Здравствуй, Петя!
Петя: Привет, Женя!
Женя: Привет, Петя! */

#include <iostream>
#include "Create_random_person.h"
#include <array>

// функция в которой создаётся группа случайных людей, ведётся работа с группой, затем освобождается память
void work_with_people()
{
	const uint8_t number_of_people = 5;

	// создаём массив случайных личностей и параллельно выводим на экран их рассказы о себе:
	std::array<Person*, number_of_people> Group;
	std::cout << "Перед Вами группа людей. Для начала пусть все представятся: \n";
	for (uint8_t i = 0; i < number_of_people; i++)
	{
		Group[i] = create_random_person();
		std::cout << Group[i]->tell_about_myself();
	}

	// теперь все здороваются со всеми:
	std::cout << "\nОтлично! Теперь пусть все по очереди поздороваются друг с другом: \n";
	for (uint8_t i = 0; i < (number_of_people-1); i++)
		for (uint8_t j = (i+1); j < number_of_people; j++)
		{
			std::cout << Group[i]->get_name() << ": " << Group[i]->say_hello(Group[j]);
			std::cout << Group[j]->get_name() << ": " << Group[j]->say_hello(Group[i]) << std::endl;
		}
	std::cout << "\nВсем спасибо, это было грандиозно!" << std::endl;

	// теперь следует очистить память, так как каждая случайная личность - это указатель, созданный с помощью new:
	for (auto each_person_pointer : Group)
		delete each_person_pointer;
}

int main()
{
	setlocale(LC_CTYPE, "rus");

	//аналог randomize с привязкой ко времени запуска:
	srand(static_cast<unsigned int>(time(0)));
	rand();
	
	work_with_people();

	return 0;
}